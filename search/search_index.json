{"config":{"lang":["en","pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"ProcessorCI Controler","text":"<p>O Controlador Processor CI \u00e9 um m\u00f3dulo de hardware que atua como um inv\u00f3lucro em torno do n\u00facleo do processador, permitindo control\u00e1-lo, monitorar o barramento de mem\u00f3ria e gerenciar sinais como clock, reset e halt.</p> <p>A ideia principal \u00e9 ser capaz de controlar diferentes tipos de processadores sem precisar interceptar sinais internos, como trabalhos anteriores faziam. Dessa forma, o controlador pode ser usado com qualquer processador que siga a ISA RISC-V, sem a necessidade de modificar o RTL do processador.</p>"},{"location":"#modulos-do-projeto","title":"M\u00f3dulos do Projeto","text":"<p>O controlador \u00e9 dividido em v\u00e1rios m\u00f3dulos, cada um respons\u00e1vel por executar uma fun\u00e7\u00e3o espec\u00edfica. Entre os m\u00f3dulos existentes, os principais s\u00e3o:</p> <p></p>"},{"location":"#interpretador","title":"Interpretador","text":"<p>O interpretador \u00e9 respons\u00e1vel por receber instru\u00e7\u00f5es enviadas pelo software de teste e emitir comandos para outros m\u00f3dulos. Esses comandos podem envolver tarefas como leitura e escrita na mem\u00f3ria, fornecimento de N ciclos de clock para o processador, etc.</p>"},{"location":"#modulo-de-comunicacao","title":"M\u00f3dulo de Comunica\u00e7\u00e3o","text":"<p>O m\u00f3dulo de comunica\u00e7\u00e3o atua como a ponte entre a m\u00e1quina host que executa o software de teste e o controlador. Ele \u00e9 respons\u00e1vel por implementar o protocolo a ser usado, que pode ser UART, SPI ou PCIe.</p>"},{"location":"#controlador-de-clock","title":"Controlador de Clock","text":"<p>O controlador de clock gerencia o sinal de clock fornecido ao processador. Ele tem a capacidade de fornecer um n\u00famero espec\u00edfico de pulsos e/ou dividir a frequ\u00eancia do clock.</p>"},{"location":"#controlador-de-memoria","title":"Controlador de Mem\u00f3ria","text":"<p>O controlador de mem\u00f3ria fornece uma interface de acesso \u00e0 mem\u00f3ria tanto para o controlador quanto para o processador, gerenciando a prioridade com que cada um pode interagir com a mem\u00f3ria.</p>"},{"location":"#projeto-global","title":"Projeto Global","text":"<p>Este projeto faz parte de um projeto maior, e a p\u00e1gina do projeto maior pode ser acessada em: processorci.ic.unicamp.br.</p>"},{"location":"#licencas","title":"Licen\u00e7as","text":"<p>Este projeto est\u00e1 regido sob a licen\u00e7a CERN-OHL-P, e sua documenta\u00e7\u00e3o est\u00e1 sob a licen\u00e7a CC BY-SA 4.0.</p>"},{"location":"LICENSE/","title":"LICENSE","text":"<p>Attribution-ShareAlike 4.0 International</p> <p>=======================================================================</p> <p>Creative Commons Corporation (\"Creative Commons\") is not a law firm and does not provide legal services or legal advice. Distribution of Creative Commons public licenses does not create a lawyer-client or other relationship. Creative Commons makes its licenses and related information available on an \"as-is\" basis. Creative Commons gives no warranties regarding its licenses, any material licensed under their terms and conditions, or any related information. Creative Commons disclaims all liability for damages resulting from their use to the fullest extent possible.</p> <p>Using Creative Commons Public Licenses</p> <p>Creative Commons public licenses provide a standard set of terms and conditions that creators and other rights holders may use to share original works of authorship and other material subject to copyright and certain other rights specified in the public license below. The following considerations are for informational purposes only, are not exhaustive, and do not form part of our licenses.</p> <pre><code> Considerations for licensors: Our public licenses are\n intended for use by those authorized to give the public\n permission to use material in ways otherwise restricted by\n copyright and certain other rights. Our licenses are\n irrevocable. Licensors should read and understand the terms\n and conditions of the license they choose before applying it.\n Licensors should also secure all rights necessary before\n applying our licenses so that the public can reuse the\n material as expected. Licensors should clearly mark any\n material not subject to the license. This includes other CC-\n licensed material, or material used under an exception or\n limitation to copyright. More considerations for licensors:\nwiki.creativecommons.org/Considerations_for_licensors\n\n Considerations for the public: By using one of our public\n licenses, a licensor grants the public permission to use the\n licensed material under specified terms and conditions. If\n the licensor's permission is not necessary for any reason--for\n example, because of any applicable exception or limitation to\n copyright--then that use is not regulated by the license. Our\n licenses grant only permissions under copyright and certain\n other rights that a licensor has authority to grant. Use of\n the licensed material may still be restricted for other\n reasons, including because others have copyright or other\n rights in the material. A licensor may make special requests,\n such as asking that all changes be marked or described.\n Although not required by our licenses, you are encouraged to\n respect those requests where reasonable. More_considerations\n for the public:\nwiki.creativecommons.org/Considerations_for_licensees\n</code></pre> <p>=======================================================================</p> <p>Creative Commons Attribution-ShareAlike 4.0 International Public License</p> <p>By exercising the Licensed Rights (defined below), You accept and agree to be bound by the terms and conditions of this Creative Commons Attribution-ShareAlike 4.0 International Public License (\"Public License\"). To the extent this Public License may be interpreted as a contract, You are granted the Licensed Rights in consideration of Your acceptance of these terms and conditions, and the Licensor grants You such rights in consideration of benefits the Licensor receives from making the Licensed Material available under these terms and conditions.</p> <p>Section 1 -- Definitions.</p> <p>a. Adapted Material means material subject to Copyright and Similar Rights that is derived from or based upon the Licensed Material and in which the Licensed Material is translated, altered, arranged, transformed, or otherwise modified in a manner requiring permission under the Copyright and Similar Rights held by the Licensor. For purposes of this Public License, where the Licensed Material is a musical work, performance, or sound recording, Adapted Material is always produced where the Licensed Material is synched in timed relation with a moving image.</p> <p>b. Adapter's License means the license You apply to Your Copyright and Similar Rights in Your contributions to Adapted Material in accordance with the terms and conditions of this Public License.</p> <p>c. BY-SA Compatible License means a license listed at creativecommons.org/compatiblelicenses, approved by Creative Commons as essentially the equivalent of this Public License.</p> <p>d. Copyright and Similar Rights means copyright and/or similar rights closely related to copyright including, without limitation, performance, broadcast, sound recording, and Sui Generis Database Rights, without regard to how the rights are labeled or categorized. For purposes of this Public License, the rights specified in Section 2(b)(1)-(2) are not Copyright and Similar Rights.</p> <p>e. Effective Technological Measures means those measures that, in the absence of proper authority, may not be circumvented under laws fulfilling obligations under Article 11 of the WIPO Copyright Treaty adopted on December 20, 1996, and/or similar international agreements.</p> <p>f. Exceptions and Limitations means fair use, fair dealing, and/or any other exception or limitation to Copyright and Similar Rights that applies to Your use of the Licensed Material.</p> <p>g. License Elements means the license attributes listed in the name of a Creative Commons Public License. The License Elements of this Public License are Attribution and ShareAlike.</p> <p>h. Licensed Material means the artistic or literary work, database, or other material to which the Licensor applied this Public License.</p> <p>i. Licensed Rights means the rights granted to You subject to the terms and conditions of this Public License, which are limited to all Copyright and Similar Rights that apply to Your use of the Licensed Material and that the Licensor has authority to license.</p> <p>j. Licensor means the individual(s) or entity(ies) granting rights under this Public License.</p> <p>k. Share means to provide material to the public by any means or process that requires permission under the Licensed Rights, such as reproduction, public display, public performance, distribution, dissemination, communication, or importation, and to make material available to the public including in ways that members of the public may access the material from a place and at a time individually chosen by them.</p> <p>l. Sui Generis Database Rights means rights other than copyright resulting from Directive 96/9/EC of the European Parliament and of the Council of 11 March 1996 on the legal protection of databases, as amended and/or succeeded, as well as other essentially equivalent rights anywhere in the world.</p> <p>m. You means the individual or entity exercising the Licensed Rights under this Public License. Your has a corresponding meaning.</p> <p>Section 2 -- Scope.</p> <p>a. License grant.</p> <pre><code>   1. Subject to the terms and conditions of this Public License,\n      the Licensor hereby grants You a worldwide, royalty-free,\n      non-sublicensable, non-exclusive, irrevocable license to\n      exercise the Licensed Rights in the Licensed Material to:\n\n        a. reproduce and Share the Licensed Material, in whole or\n           in part; and\n\n        b. produce, reproduce, and Share Adapted Material.\n\n   2. Exceptions and Limitations. For the avoidance of doubt, where\n      Exceptions and Limitations apply to Your use, this Public\n      License does not apply, and You do not need to comply with\n      its terms and conditions.\n\n   3. Term. The term of this Public License is specified in Section\n      6(a).\n\n   4. Media and formats; technical modifications allowed. The\n      Licensor authorizes You to exercise the Licensed Rights in\n      all media and formats whether now known or hereafter created,\n      and to make technical modifications necessary to do so. The\n      Licensor waives and/or agrees not to assert any right or\n      authority to forbid You from making technical modifications\n      necessary to exercise the Licensed Rights, including\n      technical modifications necessary to circumvent Effective\n      Technological Measures. For purposes of this Public License,\n      simply making modifications authorized by this Section 2(a)\n      (4) never produces Adapted Material.\n\n   5. Downstream recipients.\n\n        a. Offer from the Licensor -- Licensed Material. Every\n           recipient of the Licensed Material automatically\n           receives an offer from the Licensor to exercise the\n           Licensed Rights under the terms and conditions of this\n           Public License.\n\n        b. Additional offer from the Licensor -- Adapted Material.\n           Every recipient of Adapted Material from You\n           automatically receives an offer from the Licensor to\n           exercise the Licensed Rights in the Adapted Material\n           under the conditions of the Adapter's License You apply.\n\n        c. No downstream restrictions. You may not offer or impose\n           any additional or different terms or conditions on, or\n           apply any Effective Technological Measures to, the\n           Licensed Material if doing so restricts exercise of the\n           Licensed Rights by any recipient of the Licensed\n           Material.\n\n   6. No endorsement. Nothing in this Public License constitutes or\n      may be construed as permission to assert or imply that You\n      are, or that Your use of the Licensed Material is, connected\n      with, or sponsored, endorsed, or granted official status by,\n      the Licensor or others designated to receive attribution as\n      provided in Section 3(a)(1)(A)(i).\n</code></pre> <p>b. Other rights.</p> <pre><code>   1. Moral rights, such as the right of integrity, are not\n      licensed under this Public License, nor are publicity,\n      privacy, and/or other similar personality rights; however, to\n      the extent possible, the Licensor waives and/or agrees not to\n      assert any such rights held by the Licensor to the limited\n      extent necessary to allow You to exercise the Licensed\n      Rights, but not otherwise.\n\n   2. Patent and trademark rights are not licensed under this\n      Public License.\n\n   3. To the extent possible, the Licensor waives any right to\n      collect royalties from You for the exercise of the Licensed\n      Rights, whether directly or through a collecting society\n      under any voluntary or waivable statutory or compulsory\n      licensing scheme. In all other cases the Licensor expressly\n      reserves any right to collect such royalties.\n</code></pre> <p>Section 3 -- License Conditions.</p> <p>Your exercise of the Licensed Rights is expressly made subject to the following conditions.</p> <p>a. Attribution.</p> <pre><code>   1. If You Share the Licensed Material (including in modified\n      form), You must:\n\n        a. retain the following if it is supplied by the Licensor\n           with the Licensed Material:\n\n             i. identification of the creator(s) of the Licensed\n                Material and any others designated to receive\n                attribution, in any reasonable manner requested by\n                the Licensor (including by pseudonym if\n                designated);\n\n            ii. a copyright notice;\n\n           iii. a notice that refers to this Public License;\n\n            iv. a notice that refers to the disclaimer of\n                warranties;\n\n             v. a URI or hyperlink to the Licensed Material to the\n                extent reasonably practicable;\n\n        b. indicate if You modified the Licensed Material and\n           retain an indication of any previous modifications; and\n\n        c. indicate the Licensed Material is licensed under this\n           Public License, and include the text of, or the URI or\n           hyperlink to, this Public License.\n\n   2. You may satisfy the conditions in Section 3(a)(1) in any\n      reasonable manner based on the medium, means, and context in\n      which You Share the Licensed Material. For example, it may be\n      reasonable to satisfy the conditions by providing a URI or\n      hyperlink to a resource that includes the required\n      information.\n\n   3. If requested by the Licensor, You must remove any of the\n      information required by Section 3(a)(1)(A) to the extent\n      reasonably practicable.\n</code></pre> <p>b. ShareAlike.</p> <pre><code> In addition to the conditions in Section 3(a), if You Share\n Adapted Material You produce, the following conditions also apply.\n\n   1. The Adapter's License You apply must be a Creative Commons\n      license with the same License Elements, this version or\n      later, or a BY-SA Compatible License.\n\n   2. You must include the text of, or the URI or hyperlink to, the\n      Adapter's License You apply. You may satisfy this condition\n      in any reasonable manner based on the medium, means, and\n      context in which You Share Adapted Material.\n\n   3. You may not offer or impose any additional or different terms\n      or conditions on, or apply any Effective Technological\n      Measures to, Adapted Material that restrict exercise of the\n      rights granted under the Adapter's License You apply.\n</code></pre> <p>Section 4 -- Sui Generis Database Rights.</p> <p>Where the Licensed Rights include Sui Generis Database Rights that apply to Your use of the Licensed Material:</p> <p>a. for the avoidance of doubt, Section 2(a)(1) grants You the right to extract, reuse, reproduce, and Share all or a substantial portion of the contents of the database;</p> <p>b. if You include all or a substantial portion of the database contents in a database in which You have Sui Generis Database Rights, then the database in which You have Sui Generis Database Rights (but not its individual contents) is Adapted Material,</p> <pre><code> including for purposes of Section 3(b); and\n</code></pre> <p>c. You must comply with the conditions in Section 3(a) if You Share all or a substantial portion of the contents of the database.</p> <p>For the avoidance of doubt, this Section 4 supplements and does not replace Your obligations under this Public License where the Licensed Rights include other Copyright and Similar Rights.</p> <p>Section 5 -- Disclaimer of Warranties and Limitation of Liability.</p> <p>a. UNLESS OTHERWISE SEPARATELY UNDERTAKEN BY THE LICENSOR, TO THE EXTENT POSSIBLE, THE LICENSOR OFFERS THE LICENSED MATERIAL AS-IS AND AS-AVAILABLE, AND MAKES NO REPRESENTATIONS OR WARRANTIES OF ANY KIND CONCERNING THE LICENSED MATERIAL, WHETHER EXPRESS, IMPLIED, STATUTORY, OR OTHER. THIS INCLUDES, WITHOUT LIMITATION, WARRANTIES OF TITLE, MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, ABSENCE OF LATENT OR OTHER DEFECTS, ACCURACY, OR THE PRESENCE OR ABSENCE OF ERRORS, WHETHER OR NOT KNOWN OR DISCOVERABLE. WHERE DISCLAIMERS OF WARRANTIES ARE NOT ALLOWED IN FULL OR IN PART, THIS DISCLAIMER MAY NOT APPLY TO YOU.</p> <p>b. TO THE EXTENT POSSIBLE, IN NO EVENT WILL THE LICENSOR BE LIABLE TO YOU ON ANY LEGAL THEORY (INCLUDING, WITHOUT LIMITATION, NEGLIGENCE) OR OTHERWISE FOR ANY DIRECT, SPECIAL, INDIRECT, INCIDENTAL, CONSEQUENTIAL, PUNITIVE, EXEMPLARY, OR OTHER LOSSES, COSTS, EXPENSES, OR DAMAGES ARISING OUT OF THIS PUBLIC LICENSE OR USE OF THE LICENSED MATERIAL, EVEN IF THE LICENSOR HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH LOSSES, COSTS, EXPENSES, OR DAMAGES. WHERE A LIMITATION OF LIABILITY IS NOT ALLOWED IN FULL OR IN PART, THIS LIMITATION MAY NOT APPLY TO YOU.</p> <p>c. The disclaimer of warranties and limitation of liability provided above shall be interpreted in a manner that, to the extent possible, most closely approximates an absolute disclaimer and waiver of all liability.</p> <p>Section 6 -- Term and Termination.</p> <p>a. This Public License applies for the term of the Copyright and Similar Rights licensed here. However, if You fail to comply with this Public License, then Your rights under this Public License terminate automatically.</p> <p>b. Where Your right to use the Licensed Material has terminated under Section 6(a), it reinstates:</p> <pre><code>   1. automatically as of the date the violation is cured, provided\n      it is cured within 30 days of Your discovery of the\n      violation; or\n\n   2. upon express reinstatement by the Licensor.\n\n For the avoidance of doubt, this Section 6(b) does not affect any\n right the Licensor may have to seek remedies for Your violations\n of this Public License.\n</code></pre> <p>c. For the avoidance of doubt, the Licensor may also offer the Licensed Material under separate terms or conditions or stop distributing the Licensed Material at any time; however, doing so will not terminate this Public License.</p> <p>d. Sections 1, 5, 6, 7, and 8 survive termination of this Public License.</p> <p>Section 7 -- Other Terms and Conditions.</p> <p>a. The Licensor shall not be bound by any additional or different terms or conditions communicated by You unless expressly agreed.</p> <p>b. Any arrangements, understandings, or agreements regarding the Licensed Material not stated herein are separate from and independent of the terms and conditions of this Public License.</p> <p>Section 8 -- Interpretation.</p> <p>a. For the avoidance of doubt, this Public License does not, and shall not be interpreted to, reduce, limit, restrict, or impose conditions on any use of the Licensed Material that could lawfully be made without permission under this Public License.</p> <p>b. To the extent possible, if any provision of this Public License is deemed unenforceable, it shall be automatically reformed to the minimum extent necessary to make it enforceable. If the provision cannot be reformed, it shall be severed from this Public License without affecting the enforceability of the remaining terms and conditions.</p> <p>c. No term or condition of this Public License will be waived and no failure to comply consented to unless expressly agreed to by the Licensor.</p> <p>d. Nothing in this Public License constitutes or may be interpreted as a limitation upon, or waiver of, any privileges and immunities that apply to the Licensor or You, including from the legal processes of any jurisdiction or authority.</p> <p>=======================================================================</p> <p>Creative Commons is not a party to its public licenses. Notwithstanding, Creative Commons may elect to apply one of its public licenses to material it publishes and in those instances will be considered the \u201cLicensor.\u201d The text of the Creative Commons public licenses is dedicated to the public domain under the CC0 Public Domain Dedication. Except for the limited purpose of indicating that material is shared under a Creative Commons public license or as otherwise permitted by the Creative Commons policies published at creativecommons.org/policies, Creative Commons does not authorize the use of the trademark \"Creative Commons\" or any other trademark or logo of Creative Commons without its prior written consent including, without limitation, in connection with any unauthorized modifications to any of its public licenses or any other arrangements, understandings, or agreements concerning use of licensed material. For the avoidance of doubt, this paragraph does not form part of the public licenses.</p> <p>Creative Commons may be contacted at creativecommons.org.</p>"},{"location":"boards/","title":"Placas FPGA Atualmente Suportadas","text":"<ul> <li>Digilent Nexys 4 DDR</li> <li>Tang nano 20k</li> <li>Colorlight i9</li> <li>Digilent Arty A7 100T</li> <li>Xilinx VC709</li> <li>Cyclone 10 GX (In progress)</li> </ul>"},{"location":"contributing/","title":"Contribuindo para o Projeto","text":"<p>Obrigado por considerar contribuir para o Projeto! Estamos felizes em receber contribui\u00e7\u00f5es de qualquer pessoa interessada em melhorar este projeto. Antes de come\u00e7ar, por favor, leia este guia para entender como voc\u00ea pode contribuir de forma eficaz.</p>"},{"location":"contributing/#como-contribuir","title":"Como Contribuir","text":"<ol> <li> <p>Fork do Reposit\u00f3rio: Primeiro, fa\u00e7a um fork deste reposit\u00f3rio para a sua pr\u00f3pria conta.</p> </li> <li> <p>Clone o Reposit\u00f3rio: Clone o reposit\u00f3rio forkado para o seu ambiente de desenvolvimento local.</p> </li> </ol> <p><code>bash    git clone https://github.com/LSC-Unicamp/processor-ci-controller.git</code></p> <ol> <li>Crie uma Branch: Crie uma branch para a sua contribui\u00e7\u00e3o. Certifique-se de escolher um nome descritivo.</li> </ol> <p><code>bash    git checkout -b minha-contribuicao</code></p> <ol> <li> <p>Fa\u00e7a as Mudan\u00e7as: Fa\u00e7a as mudan\u00e7as necess\u00e1rias no c\u00f3digo.</p> </li> <li> <p>Teste as Mudan\u00e7as: Certifique-se de que as suas altera\u00e7\u00f5es n\u00e3o causam problemas no projeto. Execute testes relevantes, se aplic\u00e1vel.</p> </li> <li> <p>Commit e Push: Fa\u00e7a commit das suas mudan\u00e7as e envie-as para o seu reposit\u00f3rio forkado.</p> </li> </ol> <p><code>bash    git commit -m \"Adicionei uma nova funcionalidade\"    git push origin minha-contribuicao</code></p> <ol> <li> <p>Crie um Pull Request: Abra um Pull Request (PR) para a branch principal do projeto original. Certifique-se de descrever claramente as mudan\u00e7as que voc\u00ea fez e forne\u00e7a informa\u00e7\u00f5es relevantes.</p> </li> <li> <p>Revis\u00e3o e Discuss\u00e3o: A equipe do projeto revisar\u00e1 o seu PR e poder\u00e1 solicitar mudan\u00e7as ou esclarecimentos. Esteja disposto a colaborar e ajustar o seu c\u00f3digo conforme necess\u00e1rio.</p> </li> <li> <p>Aprova\u00e7\u00e3o e Mesclagem: Ap\u00f3s a revis\u00e3o bem-sucedida e a aprova\u00e7\u00e3o da equipe, o seu PR ser\u00e1 mesclado no projeto principal.</p> </li> <li> <p>Celebra\u00e7\u00e3o: Parab\u00e9ns! Sua contribui\u00e7\u00e3o foi mesclada com sucesso.</p> </li> </ol>"},{"location":"contributing/#diretrizes-para-contribuicoes","title":"Diretrizes para Contribui\u00e7\u00f5es","text":"<ul> <li>Siga os padr\u00f5es de codifica\u00e7\u00e3o do projeto.</li> <li>Mantenha mensagens de commit claras e concisas.</li> <li>Evite fazer muitas altera\u00e7\u00f5es em um \u00fanico PR.   *Se voc\u00ea estiver adicionando uma nova funcionalidade, considere incluir testes apropriados.</li> </ul>"},{"location":"contributing/#comunicacao","title":"Comunica\u00e7\u00e3o","text":"<ul> <li>Se voc\u00ea tiver d\u00favidas ou precisar de ajuda, crie uma issue neste reposit\u00f3rio.</li> <li>Agradecemos a sua contribui\u00e7\u00e3o para tornar o Projeto melhor!</li> </ul>"},{"location":"contributing/#licenca","title":"Licen\u00e7a","text":"<p>Ao contribuir para este projeto, voc\u00ea concorda que suas contribui\u00e7\u00f5es ser\u00e3o licenciadas sob a mesma licen\u00e7a do projeto. Leia a licen\u00e7a para mais detalhes.</p>"},{"location":"instructions/","title":"Instru\u00e7\u00f5es","text":"<p>Para a comunica\u00e7\u00e3o entre o hardware e o software, a interface \u00e9 realizada por meio de um protocolo baseado em instru\u00e7\u00f5es (comandos).</p>"},{"location":"instructions/#formato-das-instrucoes","title":"Formato das Instru\u00e7\u00f5es","text":"<p>As instru\u00e7\u00f5es s\u00e3o compostas por 32 bits, onde os 8 bits menos significativos representam o opcode e os 24 bits mais significativos s\u00e3o utilizados para o campo imediato, conforme mostrado na Tabela 1. Para instru\u00e7\u00f5es que n\u00e3o possuem um campo imediato, esses bits s\u00e3o preenchidos com zeros.</p> 31:8 7:0 Imediato Opcode <p>Tabela 1: Formato da Instru\u00e7\u00e3o</p>"},{"location":"instructions/#opcodes","title":"Opcodes","text":"<p>A Tabela 2 apresenta uma lista de todas as instru\u00e7\u00f5es dispon\u00edveis, incluindo seus respectivos opcodes em bin\u00e1rio, ASCII e hexadecimal. A especifica\u00e7\u00e3o detalhada de cada instru\u00e7\u00e3o pode ser encontrada na Se\u00e7\u00e3o 3.</p> Descri\u00e7\u00e3o Opcode Opcode ASCII Opcode Hex 2\u00ba Pacote Enviar N pulsos de CLK 01000011 C 0x43 Parar CLK do Core 01010011 S 0x53 Retomar CLK do Core 01110010 r 0x72 Resetar Core 01010010 R 0x52 Escrever na posi\u00e7\u00e3o N de mem\u00f3ria 01010111 W 0x57 Y Ler a posi\u00e7\u00e3o N de mem\u00f3ria 01001100 L 0x4C Carregar bits mais significativos no Acumulador 01010101 U 0x55 Carregar bits menos significativos no Acumulador 01101100 l 0x6C Somar N ao Acumulador 01000001 A 0x41 Escrever Acumulador na posi\u00e7\u00e3o N 01110111 w 0x77 Escrever N na posi\u00e7\u00e3o do Acumulador 01110011 s 0x73 Ler a posi\u00e7\u00e3o do Acumulador 01110010 r 0x72 Definir timeout 01010100 T 0x54 Definir tamanho da p\u00e1gina de mem\u00f3ria 01010000 P 0x50 Executar testes de mem\u00f3ria 01000101 E 0x45 Obter o ID do m\u00f3dulo e verificar funcionamento 01110000 p 0x70 Definir endere\u00e7o de t\u00e9rmino N 01000100 D 0x44 Definir valor do Acumulador como endere\u00e7o de t\u00e9rmino 01100100 d 0x64 Escrever N posi\u00e7\u00f5es a partir do Acumulador 01100101 e 0x65 Ler N posi\u00e7\u00f5es a partir do Acumulador 01100010 b 0x62 Obter valor do Acumulador 01100001 a 0x61 Alterar prioridade de acesso \u00e0 mem\u00f3ria para o Core 01001111 O 0x4F Executar at\u00e9 ponto de parada 01110101 u 0x75 <p>Tabela 2: Lista de Comandos Suportados pelo Protocolo</p>"},{"location":"instructions/#implementacao","title":"Implementa\u00e7\u00e3o","text":""},{"location":"instructions/#funcionamento","title":"Funcionamento","text":"<p>O protocolo de interface opera sobre um protocolo f\u00edsico respons\u00e1vel pela transmiss\u00e3o de dados entre a FPGA e a m\u00e1quina host. Em configura\u00e7\u00f5es de comunica\u00e7\u00e3o Master-Slave, como no protocolo SPI, uma linha de sinal chamada CAL (Callback) \u00e9 usada. Essa linha informa \u00e0 m\u00e1quina host que o controlador possui informa\u00e7\u00f5es prontas ou est\u00e1 preparado para executar um novo comando. Para protocolos bidirecionais, como o UART, os dados s\u00e3o enviados pela FPGA sem sinais de callback.</p> <p>As tabelas abaixo mostram os regimes de comunica\u00e7\u00e3o entre a FPGA e a m\u00e1quina host ao longo do tempo, considerando os tr\u00eas casos poss\u00edveis: envio de instru\u00e7\u00e3o, envio de instru\u00e7\u00e3o e dados, e envio de instru\u00e7\u00f5es com recebimento de dados. Em cada caso, as a\u00e7\u00f5es ocorrem sequencialmente. Por exemplo, no caso 2, os dados s\u00e3o enviados apenas ap\u00f3s o envio da instru\u00e7\u00e3o.</p> <p>Caso 1: Apenas Envio | Master | Instru\u00e7\u00e3o | |--------|-----------| | Slave  |           |</p> <p>Caso 2: Envio com Dados | Master | Instru\u00e7\u00e3o | Dados | |--------|-----------|-------| | Slave  |           |       |</p> <p>Caso 3: Envio e Recebimento | Master | Instru\u00e7\u00e3o |       | |--------|-----------|-------| | Slave  |           | Dados |</p> <p>Aqui est\u00e1 o texto traduzido para markdown:</p>"},{"location":"instructions/#especificacao-das-instrucoes","title":"Especifica\u00e7\u00e3o das instru\u00e7\u00f5es","text":"<ol> <li> <p>Enviar N pulsos de CLK (Opcode: 01000011, Hex: 0x43):    Envia N pulsos de clock para o processador, permitindo o avan\u00e7o de N ciclos de clock. Ap\u00f3s o t\u00e9rmino dos N ciclos, o clock do processador \u00e9 interrompido.</p> </li> <li> <p>Parar o CLK do Core (Opcode: 01010011, Hex: 0x53):    Interrompe o clock do n\u00facleo do processador, pausando a execu\u00e7\u00e3o.</p> </li> <li> <p>Retomar o CLK do Core (Opcode: 01110010, Hex: 0x72):    Retoma o clock do n\u00facleo do processador, continuando a execu\u00e7\u00e3o a partir do ponto de parada.</p> </li> <li> <p>Resetar o Core (Opcode: 01010010, Hex: 0x52):    Realiza o reset do processador, utilizando um valor constante de ciclos de clock denominado <code>RESET_CLK_CYCLES</code>, que por padr\u00e3o \u00e9 20. Ou seja, o processador \u00e9 resetado por 20 ciclos de clock, ou pelo valor configurado em <code>RESET_CLK_CYCLES</code>.</p> </li> <li> <p>Escrever na posi\u00e7\u00e3o N de mem\u00f3ria (Opcode: 01010111, Hex: 0x57):    Escreve um valor na posi\u00e7\u00e3o N da mem\u00f3ria. A opera\u00e7\u00e3o necessita do envio de dois pacotes de dados de 32 bits, com o primeiro contendo o opcode e o endere\u00e7o, e o segundo contendo os dados a serem escritos.</p> </li> <li> <p>Ler a posi\u00e7\u00e3o N de mem\u00f3ria (Opcode: 01001100, Hex: 0x4C):    L\u00ea o valor armazenado na posi\u00e7\u00e3o N da mem\u00f3ria e retorna o valor lido.</p> </li> <li> <p>Carregar bits mais significativos no Acumulador (Opcode: 01010101, Hex: 0x55):    Carrega os 24 bits mais significativos (superiores) do acumulador.</p> </li> <li> <p>Carregar bits menos significativos no acumulador (Opcode: 01101100, Hex: 0x6C):    Carrega os 8 bits menos significativos (inferiores) do acumulador.</p> </li> <li> <p>Somar N ao acumulador (Opcode: 01000001, Hex: 0x41):    Adiciona o valor N ao conte\u00fado atual do acumulador. Esta opera\u00e7\u00e3o \u00e9 sinalizada utilizando complemento de 2.</p> </li> <li> <p>Escrever Acumulador na posi\u00e7\u00e3o N (Opcode: 01110111, Hex: 0x77):     Escreve o valor contido no acumulador na posi\u00e7\u00e3o N da mem\u00f3ria.</p> </li> <li> <p>Escrever N na posi\u00e7\u00e3o do acumulador (Opcode: 01110011, Hex: 0x73):     Escreve o valor N na posi\u00e7\u00e3o de mem\u00f3ria apontada pelo acumulador.</p> </li> <li> <p>Ler a posi\u00e7\u00e3o do acumulador (Opcode: 01110010, Hex: 0x72):     L\u00ea o valor da mem\u00f3ria na posi\u00e7\u00e3o apontada pelo acumulador.</p> </li> <li> <p>Setar timeout (Opcode: 01010100, Hex: 0x54):     Define um valor de tempo limite para a execu\u00e7\u00e3o do processador, especificado em ciclos de clock.</p> </li> <li> <p>Setar tamanho da p\u00e1gina de mem\u00f3ria (Opcode: 01010000, Hex: 0x50):     Define o tamanho da p\u00e1gina de mem\u00f3ria utilizada para os testes, configurando a quantidade de mem\u00f3ria a ser usada para cada teste.</p> </li> <li> <p>Executar testes em mem\u00f3ria (Opcode: 01000101, Hex: 0x45):     Inicia a execu\u00e7\u00e3o de um conjunto de testes na mem\u00f3ria especificada. Esses testes s\u00e3o executados de forma paginada, com a possibilidade de executar um lote de testes de forma automatizada. A infraestrutura executa um teste at\u00e9 um determinado ponto de parada ou at\u00e9 o timeout. Ap\u00f3s o t\u00e9rmino da execu\u00e7\u00e3o do teste, o processador \u00e9 \"resetado\" e a p\u00e1gina de mem\u00f3ria \u00e9 alterada, repetindo todo o processo. Ap\u00f3s o t\u00e9rmino da execu\u00e7\u00e3o, \u00e9 enviada uma mensagem de confirma\u00e7\u00e3o (<code>0x676F6F64</code> - \"good\"). O n\u00famero de p\u00e1ginas a serem utilizadas \u00e9 passado como o valor imediato da instru\u00e7\u00e3o.</p> </li> <li> <p>Obter o ID e verificar funcionamento do m\u00f3dulo (Opcode: 01110000, Hex: 0x70):     Recupera o ID do m\u00f3dulo e verifica se ele est\u00e1 funcionando corretamente. O ID \u00e9 um n\u00famero de 32 bits, que cont\u00e9m informa\u00e7\u00f5es como a FPGA em utiliza\u00e7\u00e3o, a identifica\u00e7\u00e3o da infraestrutura, entre outros.</p> </li> <li> <p>Definir endere\u00e7o N de t\u00e9rmino de execu\u00e7\u00e3o (Opcode: 01000100, Hex: 0x44):     Define o endere\u00e7o N como ponto de t\u00e9rmino para a execu\u00e7\u00e3o (breakpoint).</p> </li> <li> <p>Definir o valor do Acumulador como endere\u00e7o de t\u00e9rmino (Opcode: 01100100, Hex: 0x64):     Utiliza o valor atual do acumulador para definir o endere\u00e7o de t\u00e9rmino de execu\u00e7\u00e3o (breakpoint).</p> </li> <li> <p>Escrever N posi\u00e7\u00f5es a partir do acumulador (Opcode: 01100101, Hex: 0x65):     Escreve valores em N posi\u00e7\u00f5es consecutivas de mem\u00f3ria a partir do endere\u00e7o apontado pelo acumulador. Essa instru\u00e7\u00e3o recebe N + 1 palavras[^1] de 32 bits, com a primeira sendo a instru\u00e7\u00e3o em si e as pr\u00f3ximas N palavras sendo as informa\u00e7\u00f5es a serem escritas na mem\u00f3ria.</p> </li> <li> <p>Ler N posi\u00e7\u00f5es a partir do acumulador (Opcode: 01100010, Hex: 0x62):     L\u00ea N posi\u00e7\u00f5es consecutivas de mem\u00f3ria a partir do endere\u00e7o apontado pelo acumulador. Essa instru\u00e7\u00e3o retorna N palavras, com essas N palavras sendo os dados da mem\u00f3ria.</p> </li> <li> <p>Obter o acumulador (Opcode: 01100001, Hex: 0x61):     Recupera o valor atual armazenado no acumulador.</p> </li> <li> <p>Alterar prioridade de acesso \u00e0 mem\u00f3ria para o Core (Opcode: 01001111, Hex: 0x4F):     Modifica a prioridade de acesso \u00e0 mem\u00f3ria, permitindo que o processador tenha acesso priorit\u00e1rio \u00e0 mem\u00f3ria.</p> </li> <li> <p>Executar at\u00e9 ponto de parada (Opcode: 01110101, Hex: 0x75):     Permite a execu\u00e7\u00e3o do processador at\u00e9 que um ponto predefinido (breakpoint) seja alcan\u00e7ado. Ao executar esta instru\u00e7\u00e3o, o processador \u00e9 resetado, recebe prioridade de acesso \u00e0 mem\u00f3ria e opera at\u00e9 alcan\u00e7ar o ponto de parada ou atingir o timeout de execu\u00e7\u00e3o. Ap\u00f3s o t\u00e9rmino da execu\u00e7\u00e3o, \u00e9 enviada de volta uma mensagem de confirma\u00e7\u00e3o (<code>0x6C75636B</code> - \"luck\") e uma informa\u00e7\u00e3o indicando se o t\u00e9rmino ocorreu por timeout ou fim da execu\u00e7\u00e3o, al\u00e9m da quantidade de ciclos gastos pelo processador para a execu\u00e7\u00e3o. Essa informa\u00e7\u00e3o \u00e9 enviada no formato: 24 bits mais significativos indicam os ciclos gastos, e os 8 bits menos significativos indicam se ocorreu timeout.</p> </li> </ol> <p>[^1]: Para fins de esclarecimento, o termo \"palavra\" se refere a um bloco de informa\u00e7\u00f5es de 32 bits ou 4 bytes. </p>"},{"location":"internal/","title":"Informa\u00e7\u00f5es Internas","text":""},{"location":"internal/#formas-de-comunicacao","title":"Formas de Comunica\u00e7\u00e3o","text":"<p>\u00c9 poss\u00edvel utilizar a interface com diversos protocolos de comunica\u00e7\u00e3o, sendo que os protocolos com algum suporte ou em fase de implementa\u00e7\u00e3o s\u00e3o listados na Tabela \\ref{tab:formas_comunicacao}.</p> Nome Velocidade UART 115200 bps SPI 10 MHz PCIe 2.5 GB/s USB <p>Tabela 1: Formas de Comunica\u00e7\u00e3o Fonte: Tabela \\ref{tab:formas_comunicacao}</p>"},{"location":"internal/#registradores-internos","title":"Registradores Internos","text":"<p>A infraestrutura possui alguns registradores internos especializados e multifuncionais que podem ser utilizados para intera\u00e7\u00e3o com a mem\u00f3ria e execu\u00e7\u00e3o dos testes. Esses registradores s\u00e3o:</p> <ol> <li> <p>Acumulador (ACC): O acumulador \u00e9 um registrador de 32 bits de prop\u00f3sito geral que pode ser utilizado como ponteiro de mem\u00f3ria, ser escrito na mem\u00f3ria e ser definido como breakpoint. Nota: O termo breakpoint refere-se a um ponto de parada onde o programa ser\u00e1 interrompido quando esse ponto for atingido.</p> </li> <li> <p>Timeout: O registrador de timeout \u00e9 um registrador de 32 bits utilizado para definir o tempo m\u00e1ximo de execu\u00e7\u00e3o do processador em um determinado teste, medido em ciclos de clock.</p> </li> <li> <p>NumOffPages: O registrador de n\u00famero de p\u00e1ginas \u00e9 um registrador de 24 bits utilizado para a execu\u00e7\u00e3o de testes que envolvem pagina\u00e7\u00e3o de mem\u00f3ria. Ele \u00e9 respons\u00e1vel por definir a quantidade de p\u00e1ginas de testes dispon\u00edveis para execu\u00e7\u00e3o.</p> </li> <li> <p>EndPosition: O registrador EndPosition \u00e9 um registrador de 32 bits utilizado como breakpoint para a execu\u00e7\u00e3o dos testes. A partir do acesso a esse endere\u00e7o pelo processador, a infraestrutura identifica que a execu\u00e7\u00e3o foi conclu\u00edda e pode interromper o processador.</p> </li> </ol>"},{"location":"techniques_of_use/","title":"T\u00e9cnicas de Utiliza\u00e7\u00e3o","text":"<p>Com base nas instru\u00e7\u00f5es existentes, diversas t\u00e9cnicas podem ser utilizadas para a execu\u00e7\u00e3o dos testes, incluindo: execu\u00e7\u00e3o manual, execu\u00e7\u00e3o at\u00e9 um ponto de parada e execu\u00e7\u00e3o por p\u00e1ginas.</p>"},{"location":"techniques_of_use/#execucao-manual","title":"Execu\u00e7\u00e3o Manual","text":"<p>A execu\u00e7\u00e3o manual \u00e9 realizada atrav\u00e9s da execu\u00e7\u00e3o manual do fluxo ap\u00f3s o carregamento dos testes na mem\u00f3ria. Isso inclui tarefas como \"resetar\" o processador e gerar manualmente N pulsos de clock. O pseudo c\u00f3digo abaixo ilustra essa abordagem:</p> <pre><code>Obter o ID e verificar o funcionamento do m\u00f3dulo;\n\nEscrever N posi\u00e7\u00f5es a partir do acumulador;\n\nResetar o Core;\n\nEnviar N pulsos de CLK;\n\nLer a posi\u00e7\u00e3o N de mem\u00f3ria.\n\n# Se necess\u00e1rio mais M pulsos de CLK\n\nEnviar N pulsos de CLK\n</code></pre>"},{"location":"techniques_of_use/#execucao-ate-ponto-de-parada-until","title":"Execu\u00e7\u00e3o At\u00e9 Ponto de Parada (UNTIL)","text":"<p>A infraestrutura permite a execu\u00e7\u00e3o autom\u00e1tica de um teste utilizando a t\u00e9cnica de ponto de parada. Com essa t\u00e9cnica, ap\u00f3s carregar os testes na mem\u00f3ria, basta definir um ponto de parada e um timeout em ciclos de clock. Com esses par\u00e2metros definidos, \u00e9 poss\u00edvel enviar a instru\u00e7\u00e3o para executar at\u00e9 o ponto de parada e aguardar a conclus\u00e3o. O pseudo c\u00f3digo para esse processo \u00e9 apresentado abaixo:</p> <pre><code>Obter o ID e verificar o funcionamento do m\u00f3dulo;\n\nEscrever N posi\u00e7\u00f5es a partir do acumulador;\n\n# Carregar endere\u00e7o do ponto de parada\n\nDefinir endere\u00e7o N de t\u00e9rmino da execu\u00e7\u00e3o;\n\nSetar timeout;\n\nExecutar at\u00e9 o ponto de parada.\n</code></pre>"},{"location":"techniques_of_use/#execucao-por-paginas","title":"Execu\u00e7\u00e3o por P\u00e1ginas","text":"<p>Para a execu\u00e7\u00e3o de v\u00e1rios testes em sequ\u00eancia, \u00e9 poss\u00edvel utilizar um sistema baseado em pagina\u00e7\u00e3o. Nesse sistema, os testes s\u00e3o armazenados em blocos de tamanho fixo, por padr\u00e3o 256 posi\u00e7\u00f5es, e o controlador navega por esses blocos controlando os bits mais significativos do endere\u00e7o. O funcionamento \u00e9 semelhante ao da execu\u00e7\u00e3o at\u00e9 um ponto de parada, mas o processo \u00e9 repetido at\u00e9 a execu\u00e7\u00e3o de todas as p\u00e1ginas. O pseudo c\u00f3digo a seguir ilustra esse processo:</p> <pre><code>Obter o ID e verificar o funcionamento do m\u00f3dulo;\n\nEscrever N posi\u00e7\u00f5es a partir do acumulador;\n\n# Carregar endere\u00e7o do ponto de parada - o endere\u00e7o precisa ser menor ou igual ao endere\u00e7o m\u00e1ximo da p\u00e1gina, por padr\u00e3o 0xFF\n\nDefinir endere\u00e7o N de t\u00e9rmino da execu\u00e7\u00e3o;\n\nSetar timeout;\n\nExecutar testes em mem\u00f3ria.\n</code></pre>"},{"location":"techniques_of_use/#fluxo-de-dados","title":"Fluxo de Dados","text":"<p>\u00c9 poss\u00edvel enviar e ler dados para a mem\u00f3ria de duas formas: at\u00f4mica (palavra por palavra) ou em lote, enviando N palavras de uma vez.</p>"},{"location":"techniques_of_use/#carregamento-atomico","title":"Carregamento At\u00f4mico","text":"<p>O carregamento at\u00f4mico \u00e9 realizado lendo e escrevendo dados palavra por palavra. Esse m\u00e9todo pode ser executado utilizando as seguintes instru\u00e7\u00f5es: \"Escrever na posi\u00e7\u00e3o N de mem\u00f3ria\", \"Escrever N na posi\u00e7\u00e3o do acumulador\", \"Ler a posi\u00e7\u00e3o N de mem\u00f3ria\" e \"Ler a posi\u00e7\u00e3o do acumulador\". Ao utilizar instru\u00e7\u00f5es baseadas em valores imediatos, \u00e9 necess\u00e1rio enviar a instru\u00e7\u00e3o M vezes para ler ou escrever M palavras. Quando se utiliza o acumulador, \u00e9 necess\u00e1rio definir o ponteiro do acumulador M vezes e executar as instru\u00e7\u00f5es de leitura e escrita M vezes. Dessa forma, o uso dessas instru\u00e7\u00f5es \u00e9 mais adequado para pequenas modifica\u00e7\u00f5es, como ler um resultado ou ler/escrever uma ou duas palavras na mem\u00f3ria.</p>"},{"location":"techniques_of_use/#carregamento-em-lote","title":"Carregamento em Lote","text":"<p>O carregamento em lote permite ler ou escrever M palavras utilizando apenas uma ou duas instru\u00e7\u00f5es. Com esse m\u00e9todo, \u00e9 necess\u00e1rio apenas carregar o endere\u00e7o base no acumulador e utilizar as instru\u00e7\u00f5es de leitura em lote para ler ou escrever M palavras. As instru\u00e7\u00f5es de opera\u00e7\u00e3o em lote s\u00e3o: \"Ler N posi\u00e7\u00f5es a partir do acumulador\" e \"Escrever N posi\u00e7\u00f5es a partir do acumulador\".</p>"},{"location":"en/","title":"ProcessorCI Controler","text":"<p>Processor CI Controller is a hardware module that acts as a wrapper around the processor core, enabling control over it, monitoring the memory bus, and managing signals such as clock, reset, and halt.</p> <p>The key idea is to be able to control distinct kind of processors without needing to intercept internal signals as previous works do. This way, the controller can be used with any processor that follows the RISC-V ISA, without needing to modify the processor's RTL.</p>"},{"location":"en/#project-modules","title":"Project Modules","text":"<p>The controller is divided into various modules, each responsible for performing a specific function. Among the existing modules, the main ones are:</p> <p></p>"},{"location":"en/#interpreter","title":"Interpreter","text":"<p>The interpreter is responsible for receiving instructions sent by the test software and issuing commands to other modules. These commands can involve tasks such as reading and writing to memory, providing N clock cycles to the processor, etc.</p>"},{"location":"en/#communication-module","title":"Communication Module","text":"<p>The communication module acts as the bridge between the host machine running the test software and the controller. It is responsible for implementing the protocol to be used, which could be UART, SPI, or PCIe.</p>"},{"location":"en/#clock-controller","title":"Clock Controller","text":"<p>The clock controller manages the clock signal provided to the processor. It has the capability to supply a specific number of pulses and/or divide the clock frequency.</p>"},{"location":"en/#memory-controller","title":"Memory Controller","text":"<p>The memory controller provides an access interface to the memory for both the controller and the processor, managing the priority with which each can interact with the memory.</p>"},{"location":"en/#global-project","title":"Global project","text":"<p>This project is part of a larger project, and the page for the larger project can be accessed at: processorci.ic.unicamp.br.</p>"},{"location":"en/#licenses","title":"Licenses","text":"<p>This project is governed by the CERN-OHL-P license, and its documentation is under the CC BY-SA 4.0 license.</p>"},{"location":"en/boards/","title":"Currently supported FPGAs Boards","text":"<ul> <li>Digilent Nexys 4 DDR</li> <li>Tang nano 20k</li> <li>Colorlight i9</li> <li>Digilent Arty A7 100T</li> <li>Xilinx VC709</li> <li>Cyclone 10 GX (In progress)</li> </ul>"},{"location":"en/contributing/","title":"Contributing to the Project","text":"<p>Thank you for considering contributing to the Project! We are happy to welcome contributions from anyone interested in improving this project. Before you start, please read this guide to understand how you can contribute effectively.</p>"},{"location":"en/contributing/#how-to-contribute","title":"How to Contribute","text":"<ol> <li> <p>Fork the Repository: First, fork this repository to your own account.</p> </li> <li> <p>Clone the Repository: Clone the forked repository to your local development environment.</p> </li> </ol> <p><code>bash    git clone https://github.com/LSC-Unicamp/processor-ci-controller.git</code></p> <ol> <li>Create a Branch: Create a branch for your contribution. Make sure to choose a descriptive name.</li> </ol> <p><code>bash    git checkout -b my-contribution</code></p> <ol> <li> <p>Make Changes: Make the necessary changes to the code.</p> </li> <li> <p>Test the Changes: Ensure that your changes do not cause any issues in the project. Run relevant tests if applicable.</p> </li> <li> <p>Commit and Push: Commit your changes and push them to your forked repository.</p> </li> </ol> <p><code>bash    git commit -m \"Added a new feature\"    git push origin my-contribution</code></p> <ol> <li> <p>Create a Pull Request: Open a Pull Request (PR) to the main branch of the original project. Make sure to clearly describe the changes you made and provide relevant information.</p> </li> <li> <p>Review and Discussion: The project team will review your PR and may request changes or clarifications. Be willing to collaborate and adjust your code as necessary.</p> </li> <li> <p>Approval and Merging: After successful review and approval by the team, your PR will be merged into the main project.</p> </li> <li> <p>Celebration: Congratulations! Your contribution has been successfully merged.</p> </li> </ol>"},{"location":"en/contributing/#contribution-guidelines","title":"Contribution Guidelines","text":"<ul> <li>Follow the project\u2019s coding standards.</li> <li>Keep commit messages clear and concise.</li> <li>Avoid making too many changes in a single PR.</li> <li>If you are adding a new feature, consider including appropriate tests.</li> </ul>"},{"location":"en/contributing/#communication","title":"Communication","text":"<ul> <li>If you have questions or need help, create an issue in this repository.</li> <li>We appreciate your contribution to making the Project better!</li> </ul>"},{"location":"en/contributing/#license","title":"License","text":"<p>By contributing to this project, you agree that your contributions will be licensed under the same license as the project. Read the license for more details.</p>"},{"location":"en/instructions/","title":"Instructions","text":"<p>For communication between hardware and software, the interface is carried out through an instruction-based protocol (commands).</p>"},{"location":"en/instructions/#instruction-format","title":"Instruction Format","text":"<p>The instructions are composed of 32 bits, where the 8 least significant bits represent the opcode, and the 24 most significant bits are used for the immediate field, as shown in Table 1. For instructions that do not have an immediate field, these bits are filled with zeros.</p> 31:8 7:0 Immediate Opcode <p>Table 1: Instruction Format</p>"},{"location":"en/instructions/#opcodes","title":"Opcodes","text":"<p>Table 2 shows a list of all available instructions, including their respective opcodes in binary, ASCII, and hexadecimal. The detailed specification of each instruction can be found in Section 3.</p> Description Opcode ASCII Opcode Hex Opcode 2nd Packet Send N CLK pulses 01000011 C 0x43 Stop Core CLK 01010011 S 0x53 Resume Core CLK 01110010 r 0x72 Reset Core 01010010 R 0x52 Write to memory position N 01010111 W 0x57 Y Read memory position N 01001100 L 0x4C Load most significant bits into Accumulator 01010101 U 0x55 Load least significant bits into Accumulator 01101100 l 0x6C Add N to Accumulator 01000001 A 0x41 Write Accumulator to position N 01110111 w 0x77 Write N to Accumulator position 01110011 s 0x73 Read Accumulator position 01110010 r 0x72 Set timeout 01010100 T 0x54 Set memory page size 01010000 P 0x50 Execute memory tests 01000101 E 0x45 Get module ID and check functionality 01110000 p 0x70 Set execution end address N 01000100 D 0x44 Set Accumulator value as end address 01100100 d 0x64 Write N positions from Accumulator 01100101 e 0x65 Read N positions from Accumulator 01100010 b 0x62 Get Accumulator 01100001 a 0x61 Change memory access priority to Core 01001111 O 0x4F Execute until breakpoint 01110101 u 0x75 <p>Table 2: List of Commands Supported by the Protocol</p>"},{"location":"en/instructions/#implementation","title":"Implementation","text":""},{"location":"en/instructions/#operation","title":"Operation","text":"<p>The interface protocol operates over a physical protocol responsible for data transmission between the FPGA and the host machine. In Master-Slave communication settings, such as the SPI protocol, a signal line called CAL (Callback) is used. This line informs the host machine that the controller has information ready or is prepared to execute a new command. For bidirectional protocols, like UART, data is sent by the FPGA without callback signals.</p> <p>The tables below show the communication regimes between the FPGA and the host machine over time, considering the three possible cases: sending instruction only, sending instruction and data, and sending instructions with data reception. In each case, actions occur sequentially. For example, in case 2, the data is sent only after sending the instruction.  </p> <p>Case 1: Sending Only | Master | Instruction | |--------|-------------| | Slave  |             |</p> <p>Case 2: Sending with Data | Master | Instruction | Data | |--------|-------------|------| | Slave  |             |      |</p> <p>Case 3: Sending and Receiving | Master | Instruction |      | |--------|-------------|------| | Slave  |             | Data |</p> <p>Here is the text translated to English:</p>"},{"location":"en/instructions/#instruction-specification","title":"Instruction Specification","text":"<ol> <li> <p>Send N CLK pulses (Opcode: 01000011, Hex: 0x43):    Sends N clock pulses to the processor, allowing the advancement of N clock cycles. After the N cycles are completed, the processor's clock is halted.</p> </li> <li> <p>Stop Core CLK (Opcode: 01010011, Hex: 0x53):    Stops the processor core clock, pausing execution.</p> </li> <li> <p>Resume Core CLK (Opcode: 01110010, Hex: 0x72):    Resumes the processor core clock, continuing execution from the halt point.</p> </li> <li> <p>Reset Core (Opcode: 01010010, Hex: 0x52):    Resets the processor using a constant clock cycle value called <code>RESET_CLK_CYCLES</code>, which defaults to 20. In other words, the processor is reset for 20 clock cycles or for the value set in <code>RESET_CLK_CYCLES</code>.</p> </li> <li> <p>Write to memory position N (Opcode: 01010111, Hex: 0x57):    Writes a value to memory position N. This operation requires sending two 32-bit data packets, with the first containing the opcode and the address, and the second containing the data to be written.</p> </li> <li> <p>Read memory position N (Opcode: 01001100, Hex: 0x4C):    Reads the value stored in memory position N and returns the read value.</p> </li> <li> <p>Load most significant bits to Accumulator (Opcode: 01010101, Hex: 0x55):    Loads the 24 most significant (upper) bits of the accumulator.</p> </li> <li> <p>Load least significant bits to Accumulator (Opcode: 01101100, Hex: 0x6C):    Loads the 8 least significant (lower) bits of the accumulator.</p> </li> <li> <p>Add N to Accumulator (Opcode: 01000001, Hex: 0x41):    Adds the value N to the current content of the accumulator. This operation uses two\u2019s complement signaling.</p> </li> <li> <p>Write Accumulator to position N (Opcode: 01110111, Hex: 0x77):     Writes the value stored in the accumulator to memory position N.</p> </li> <li> <p>Write N to the Accumulator position (Opcode: 01110011, Hex: 0x73):     Writes the value N to the memory position pointed to by the accumulator.</p> </li> <li> <p>Read Accumulator position (Opcode: 01110010, Hex: 0x72):     Reads the memory value at the position pointed to by the accumulator.</p> </li> <li> <p>Set timeout (Opcode: 01010100, Hex: 0x54):     Sets a timeout value for processor execution, specified in clock cycles.</p> </li> <li> <p>Set memory page size (Opcode: 01010000, Hex: 0x50):     Sets the memory page size used for tests, configuring the amount of memory to be used for each test.</p> </li> <li> <p>Execute tests in memory (Opcode: 01000101, Hex: 0x45):     Starts executing a set of tests in the specified memory. These tests are executed in a paginated manner, allowing for automated batch testing. The infrastructure runs a test until a specific breakpoint or timeout is reached. After completing the test execution, the processor is reset, and the memory page is changed, repeating the entire process. After execution ends, a confirmation message (<code>0x676F6F64</code> - \"good\") is sent. The number of pages to be used is passed as the immediate value of the instruction.</p> </li> <li> <p>Get ID and check module functionality (Opcode: 01110000, Hex: 0x70):     Retrieves the module ID and checks if it is functioning correctly. The ID is a 32-bit number that contains information such as the FPGA in use, the infrastructure identification, and more.</p> </li> <li> <p>Set end of execution address N (Opcode: 01000100, Hex: 0x44):     Sets address N as the breakpoint for execution.</p> </li> <li> <p>Set Accumulator value as end of execution address (Opcode: 01100100, Hex: 0x64):     Uses the current accumulator value to set the breakpoint address for execution.</p> </li> <li> <p>Write N positions starting from the Accumulator (Opcode: 01100101, Hex: 0x65):     Writes values to N consecutive memory positions starting from the address pointed to by the accumulator. This instruction receives N + 1 words[^1] of 32 bits, with the first being the instruction itself and the next N words being the data to be written to memory.</p> </li> <li> <p>Read N positions starting from the Accumulator (Opcode: 01100010, Hex: 0x62):     Reads N consecutive memory positions starting from the address pointed to by the accumulator. This instruction returns N words, with these N words being the memory data.</p> </li> <li> <p>Get Accumulator (Opcode: 01100001, Hex: 0x61):     Retrieves the current value stored in the accumulator.</p> </li> <li> <p>Change memory access priority to Core (Opcode: 01001111, Hex: 0x4F):     Modifies the memory access priority, allowing the processor to have priority access to the memory.</p> </li> <li> <p>Execute until breakpoint (Opcode: 01110101, Hex: 0x75):     Allows the processor to execute until a predefined breakpoint is reached. When this instruction is executed, the processor is reset, given priority access to memory, and operates until the breakpoint is reached or execution timeout occurs. After execution ends, a confirmation message (<code>0x6C75636B</code> - \"luck\") is sent back, along with information indicating whether the termination was due to a timeout or end of execution, as well as the number of cycles taken by the processor to execute. This information is sent in the format: the 24 most significant bits indicate the cycles taken, and the 8 least significant bits indicate whether a timeout occurred.</p> </li> </ol> <p>[^1]: For clarification, the term \"word\" refers to a 32-bit block of information or 4 bytes.</p>"},{"location":"en/internal/","title":"Internal Information","text":""},{"location":"en/internal/#communication-methods","title":"Communication Methods","text":"<p>It is possible to use the interface with various communication protocols, with those having some level of support or in the implementation phase listed in Table \\ref{tab:communication_methods}.</p> Name Speed UART 115200 bps SPI 10 MHz PCIe 2.5 GB/s USB <p>Table 1: Communication Methods Source: Table \\ref{tab:communication_methods}</p>"},{"location":"en/internal/#internal-registers","title":"Internal Registers","text":"<p>The infrastructure includes several specialized and multifunctional internal registers that can be used for memory interaction and test execution. These registers are:</p> <ol> <li> <p>Accumulator (ACC): The accumulator is a 32-bit general-purpose register that can be used as a memory pointer, to write to memory, and to be set as a breakpoint. Note: The term breakpoint refers to a stopping point where the program will be interrupted when this point is reached.</p> </li> <li> <p>Timeout: The timeout register is a 32-bit register used to define the maximum execution time of the processor for a given test, measured in clock cycles.</p> </li> <li> <p>NumOffPages: The number of pages register is a 24-bit register used for running tests involving memory paging. It is responsible for defining the number of test pages available for execution.</p> </li> <li> <p>EndPosition: The EndPosition register is a 32-bit register used as a breakpoint for test execution. Once the processor accesses this address, the infrastructure identifies that the execution has been completed and can halt the processor.</p> </li> </ol>"},{"location":"en/techniques_of_use/","title":"Utilization Techniques","text":"<p>Based on the existing instructions, various techniques can be used for test execution, including: manual execution, execution until a breakpoint, and execution by pages.</p>"},{"location":"en/techniques_of_use/#manual-execution","title":"Manual Execution","text":"<p>Manual execution is performed by manually executing the workflow after loading the tests into memory. This includes tasks such as resetting the processor and manually generating N clock pulses. The pseudo-code below illustrates this approach:</p> <pre><code>Get ID and check module functionality;\n\nWrite N positions from the accumulator;\n\nReset Core;\n\nSend N CLK pulses;\n\nRead memory position N.\n\n# If more M CLK pulses are needed\n\nSend N CLK pulses\n</code></pre>"},{"location":"en/techniques_of_use/#execution-until-breakpoint-until","title":"Execution Until Breakpoint (UNTIL)","text":"<p>The infrastructure supports automatic test execution using the breakpoint technique. With this technique, after loading the tests into memory, you simply set a breakpoint and a timeout in clock cycles. With these parameters defined, you can send the instruction to execute until the breakpoint and wait for completion. The pseudo-code for this process is shown below:</p> <pre><code>Get ID and check module functionality;\n\nWrite N positions from the accumulator;\n\n# Load breakpoint address\n\nDefine address N as the end of execution;\n\nSet timeout;\n\nExecute until breakpoint.\n</code></pre>"},{"location":"en/techniques_of_use/#execution-by-pages","title":"Execution by Pages","text":"<p>For executing multiple tests in sequence, a paging system can be used. In this system, tests are stored in fixed-size blocks, by default 256 positions, and the controller navigates through these blocks by controlling the most significant bits of the address. The operation is similar to execution until a breakpoint, but the process is repeated until all pages have been executed. The pseudo-code below illustrates this process:</p> <pre><code>Get ID and check module functionality;\n\nWrite N positions from the accumulator;\n\n# Load breakpoint address - the address must be less than or equal to the maximum page address, by default 0xFF\n\nDefine address N as the end of execution;\n\nSet timeout;\n\nExecute tests in memory.\n</code></pre>"},{"location":"en/techniques_of_use/#data-flow","title":"Data Flow","text":"<p>Data can be sent and read from memory in two ways: atomically (word by word) or in bulk, sending N words at once.</p>"},{"location":"en/techniques_of_use/#atomic-loading","title":"Atomic Loading","text":"<p>Atomic loading is performed by reading and writing data word by word. This method can be executed using the following instructions: \"Write to memory position N\", \"Write N to accumulator position\", \"Read memory position N\", and \"Read accumulator position\". When using immediate value instructions, you need to send the instruction M times to read or write M words. When using the accumulator, you need to set the accumulator pointer M times and execute the read and write instructions M times. Thus, using these instructions is more suitable for small modifications, such as reading a result or reading/writing one or two words in memory.</p>"},{"location":"en/techniques_of_use/#bulk-loading","title":"Bulk Loading","text":"<p>Bulk loading allows reading or writing M words using only one or two instructions. With this method, you only need to load the base address into the accumulator and use bulk read instructions to read or write M words. The bulk operation instructions are: \"Read N positions from the accumulator\" and \"Write N positions from the accumulator\".</p>"}]}